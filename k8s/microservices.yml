#TODO Compl√©ter le fichier afin qu'il fonctionne
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <votre-namespace>
  name: blog-backend-nom-prenom
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 300
  replicas: ${replicas}
  selector:
    matchLabels:
      app: blog-backend
  template:
    metadata:
      labels:
        app: blog-backend
    spec:
      containers:
        - name: redis-${env_name}
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
        - name: blog-backend
          image: ${api_image_tag}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            requests:
                cpu: ${requests_cpu}
                memory: ${requests_memory}
            limits:
                cpu: ${limits_cpu}
                memory: ${limits_memory}


          env:
            # Ajouter les variables d'environnement provenant des secrets, tel que c'est fait pour les configmaps ci-dessous
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK
              valueFrom:
                configMapKeyRef:
                  name:
                  key: logging_level_org_springframework
            - name: LOGGING_LEVEL_ORG_HIBERNATE_SQL
              valueFrom:
                configMapKeyRef:
                  name:
                  key: logging_level_org_hibernate_sql
            - name: LOGGING_LEVEL_TECH_ZEROFILTRE
              valueFrom:
                configMapKeyRef:
                  name:
                  key: logging_level_tech_zerofiltre
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name:
                  key: server_port
            - name: THROTTLING_CAPACITY
              valueFrom:
                configMapKeyRef:
                  name:
                  key: throttling_capacity
            - name: THROTTLING_TIME_SECONDS
              valueFrom:
                configMapKeyRef:
                  name:
                  key: throttling_time_seconds
            - name: SPRING_LIQUIBASE_CHANGELOG
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_liquibase_changelog
            - name: SPRING_MAIL_HOST
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_mail_host
            - name: SPRING_MAIL_PORT
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_mail_port
            - name: SPRING_MAIL_USERNAME
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_mail_username
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_datasource_username
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name:
                  key: spring_datasource_url
            - name: HIBERNATE_DDL_AUTO
              valueFrom:
                configMapKeyRef:
                  name:
                  key: hibernate_ddl_auto
            - name: ZEROFILTRE_ENV
              valueFrom:
                configMapKeyRef:
                  name:
                  key: zerofiltre_env
            - name: SECURITY_JWT_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  name:
                  key: security_jwt_expiration
            - name: SECURITY_JWT_URI
              valueFrom:
                configMapKeyRef:
                  name:
                  key: security_jwt_uri
            - name: ALLOWED_ORIGINS_PATTERN
              valueFrom:
                configMapKeyRef:
                  name:
                  key: allowed_origins_pattern
            - name: REMINDER_RATE
              valueFrom:
                configMapKeyRef:
                  name:
                  key: reminder_rate
            - name: REMINDER_INITIAL_DELAY
              valueFrom:
                configMapKeyRef:
                  name:
                  key: reminder_initial_delay
            - name: SPRING_MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:
                  key: spring_mail_password
            - name : SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:
                  key: spring_datasource_password
            - name: SECURITY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                   name:
                   key: security_jwt_secret



---
apiVersion: v1
kind: Service
metadata:
  namespace: <votre-namespace>
  name: blog-backend-<nom-prenom>
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: blog-backend
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: <votre-namespace>
  name: blog-backend-<nom-prenom>
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: ${api_host}
      http:
        paths:
          - path: /
            backend:
              serviceName: blog-backend-<nom-prenom>
              servicePort: 80
  tls: # < placing a host in the TLS config will indicate a certificate should be created
    - hosts:
        - ${api_host}
      secretName: blog-api-zerofiltre-ingress-cert # < cert-manager will store the created certificate in this secret.